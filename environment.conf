[ -n "$PS1" ] && bind "set completion-ignore-case on"

export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32'

# Returns 0 (success) if the pwd is tracked, otherwise 1 (failure).
git_pwd_is_tracked() {
   [ $(git log -1 --pretty=oneline . 2> /dev/null | wc -l) -eq "1" ]
}

# Emits the current time in 24-hr notation.
show_time() {
  echo "$(date +%H:%M)"
}

# Stores the exit status of the last command for use by show_exit_status function.
if [[ ! $PROMPT_COMMAND =~ store_exit_status ]]; then
  export PROMPT_COMMAND="store_exit_status && ${PROMPT_COMMAND:-:}"
fi
store_exit_status() {
  LAST_EXIT_STATUS=$?
}

# Emits exit status of last command if error condition returned.
show_exit_status() {
  if [ "x${LAST_EXIT_STATUS}" != "x0" ]; then
    echo " ${LAST_EXIT_STATUS}"
  fi
}

# Emits the current git branch and marker if there are outstanding changes.
show_git_branch_and_status() {
  if git_pwd_is_tracked; then
    local branch_prompt
    branch_prompt=$(__git_ps1 "%s")
    if [[ -n "$branch_prompt" ]]; then
      echo " $branch_prompt $(show_git_status)"
    fi
  fi
}

# Removes display of git status from prompt, useful for large repositories.
hide_git_status() {
  show_git_branch_and_status() { exit; }
}

# Emits a red âœ— if current repository is 'dirty'.
show_git_status() {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "+"
}

# prompt
#export PS1="\e[1;35m\@\e[m \e[1;30m\W\e[m \e[1;32m>:\e[m "
#export PS1="\e${COLOR_GRAY}\w\e${COLOR_NONE}\e${COLOR_RED}"'$(show_exit_status)$(show_git_branch_and_status)'" \e${COLOR_GRAY}\u@\h\e${COLOR_NONE} \e${COLOR_LIGHT_GREEN}\n>: \e${COLOR_NONE}"
#export PS1='$(show_time) $(prompt_color)'"\u@\h${COLOR_NONE}: ${COLOR_CYAN}\w${COLOR_NONE}""\n> "
export PS1="\[\033[1;30m\]\w\[\033[0m\]"\
"\[\033[1;35m\]"'$(show_git_branch_and_status)'"\[\033[0m\]"\
"\[\033[0;31m\]"'$(show_exit_status)'"\[\033[0m\]"\
" \[\033[1;32m\]>:\[\033[0m\] "

